    /*
* Copyright (c) 2011 the original author or authors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import org.gradle.api.artifacts.maven.XmlProvider

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'

group = 'org.gradlefx'
version = '0.3.1-SNAPSHOT'
packaging = 'jar'

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    groovy group: 'org.codehaus.groovy', name: 'groovy', version: '1.7.10'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from 'build/docs/groovydoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives groovydocJar
    archives sourcesJar
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        name 'GradleFx'
        packaging 'jar'
        description 'GradleFx is a Gradle plugin for building Flex and Actionscript applications'
        url 'http://gradlefx.github.com/'

        scm {
            url 'scm:git@github.com:GradleFx/GradleFx.git'
            connection 'scm:git@github.com:GradleFx/GradleFx.git'
            developerConnection 'scm:git@github.com:GradleFx/GradleFx.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'yennicktrevels'
                name 'Yennick Trevels'
            }
            developer {
                id 'stevendick'
                name 'Steven Dick'
            }
        }
    }

    //mess with the generated pom to set the 'packaging' tag
    pom.withXml { XmlProvider xmlProvider ->
        def xml = xmlProvider.asString()
        def pomXml = new XmlParser().parse(new ByteArrayInputStream(xml.toString().bytes))

        pomXml.version[0] + { packaging('jar') }

        def newXml = new StringWriter()
        def printer = new XmlNodePrinter(new PrintWriter(newXml))
        printer.preserveWhitespace = true
        printer.print(pomXml)
        xml.setLength(0)
        xml.append(newXml.toString())
    }
}
